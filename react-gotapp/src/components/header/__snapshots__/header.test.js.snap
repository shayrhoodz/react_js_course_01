// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing <Header/> Header have rendered correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <Link
            replace={false}
            to="/"
          >
            Game of Thrones DB
          </Link>
        </ForwardRef>,
        <ForwardRef>
          <li>
            <Link
              replace={false}
              to="/characters/"
            >
              Characters
            </Link>
          </li>
          <li>
            <Link
              replace={false}
              to="/houses/"
            >
              Houses
            </Link>
          </li>
          <li>
            <Link
              replace={false}
              to="/books/"
            >
              Books
            </Link>
          </li>
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Link
            replace={false}
            to="/"
          >
            Game of Thrones DB
          </Link>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Game of Thrones DB",
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": "Game of Thrones DB",
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": true,
            "rules": Array [
              "
    font-size: 24px;
    color: #fff;
    margin: 0;
",
            ],
          },
          "displayName": "styled.h3",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "h3",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <li>
              <Link
                replace={false}
                to="/characters/"
              >
                Characters
              </Link>
            </li>,
            <li>
              <Link
                replace={false}
                to="/houses/"
              >
                Houses
              </Link>
            </li>,
            <li>
              <Link
                replace={false}
                to="/books/"
              >
                Books
              </Link>
            </li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                replace={false}
                to="/characters/"
              >
                Characters
              </Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Characters",
                "replace": false,
                "to": "/characters/",
              },
              "ref": null,
              "rendered": "Characters",
              "type": [Function],
            },
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                replace={false}
                to="/houses/"
              >
                Houses
              </Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Houses",
                "replace": false,
                "to": "/houses/",
              },
              "ref": null,
              "rendered": "Houses",
              "type": [Function],
            },
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                replace={false}
                to="/books/"
              >
                Books
              </Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Books",
                "replace": false,
                "to": "/books/",
              },
              "ref": null,
              "rendered": "Books",
              "type": [Function],
            },
            "type": "li",
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "rules": Array [
              "
    display: flex;
    margin: 0;
    align-items: center;
    color: #fff;
    list-style-type: none;
    li {
        margin-right: 20px;
        font-size: 18px;
    }
",
            ],
          },
          "displayName": "styled.ul",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "ul",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 80px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <Link
              replace={false}
              to="/"
            >
              Game of Thrones DB
            </Link>
          </ForwardRef>,
          <ForwardRef>
            <li>
              <Link
                replace={false}
                to="/characters/"
              >
                Characters
              </Link>
            </li>
            <li>
              <Link
                replace={false}
                to="/houses/"
              >
                Houses
              </Link>
            </li>
            <li>
              <Link
                replace={false}
                to="/books/"
              >
                Books
              </Link>
            </li>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Link
              replace={false}
              to="/"
            >
              Game of Thrones DB
            </Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Game of Thrones DB",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": "Game of Thrones DB",
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": true,
              "rules": Array [
                "
    font-size: 24px;
    color: #fff;
    margin: 0;
",
              ],
            },
            "displayName": "styled.h3",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "h3",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <li>
                <Link
                  replace={false}
                  to="/characters/"
                >
                  Characters
                </Link>
              </li>,
              <li>
                <Link
                  replace={false}
                  to="/houses/"
                >
                  Houses
                </Link>
              </li>,
              <li>
                <Link
                  replace={false}
                  to="/books/"
                >
                  Books
                </Link>
              </li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/characters/"
                >
                  Characters
                </Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Characters",
                  "replace": false,
                  "to": "/characters/",
                },
                "ref": null,
                "rendered": "Characters",
                "type": [Function],
              },
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/houses/"
                >
                  Houses
                </Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Houses",
                  "replace": false,
                  "to": "/houses/",
                },
                "ref": null,
                "rendered": "Houses",
                "type": [Function],
              },
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/books/"
                >
                  Books
                </Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Books",
                  "replace": false,
                  "to": "/books/",
                },
                "ref": null,
                "rendered": "Books",
                "type": [Function],
              },
              "type": "li",
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "rules": Array [
                "
    display: flex;
    margin: 0;
    align-items: center;
    color: #fff;
    list-style-type: none;
    li {
        margin-right: 20px;
        font-size: 18px;
    }
",
              ],
            },
            "displayName": "styled.ul",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "ul",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 80px;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
